#include <Wire.h>
#include <Adafruit_MotorShield.h>
#include "utility/Adafruit_MS_PWMServoDriver.h"
///////ultra sonic setup
// Pin configuration for first ultrasonic sensor
// Pin configuration for the forward-facing ultrasonic sensor
const int trigPinForward = 9;
const int echoPinForward = 10;

// Pin configuration for the left-facing ultrasonic sensor
const int trigPinLeft = 11;
const int echoPinLeft = 12;

float durationForward, aheadUltra;
float durationLeft, leftUltra;
/////////////// ultra sonic setup complete

/////// ir sensor setup
const int irSensorPinR = A8; // Analog pin for IR sensor was A8
const int irSensorPinL = A9; // Analog pin for IR sensor was A9
const float conversionFactor = 5.0 / 1023.0; // Conversion factor for analog readings to voltage
////// ir sensor setup
  
//// dc motor setup
Adafruit_MotorShield AFMS = Adafruit_MotorShield();
Adafruit_DCMotor *rightMotor = AFMS.getMotor(1);
Adafruit_DCMotor *leftMotor = AFMS.getMotor(2);
////dc motor setup

void setup() {
  // put your setup code here, to run once:
    Serial.begin(9600); //begin serial comms
  AFMS.begin();
/// initializing pins for the ultrasonic sensors ////
  pinMode(trigPinForward, OUTPUT);
  pinMode(echoPinForward, INPUT);
  pinMode(trigPinLeft, OUTPUT);
  pinMode(echoPinLeft, INPUT);
  /// initializing pins for the ultrasonic sensors ////

}

void loop() {
  // put your main code here, to run repeatedly:
    //////////////////////////////////////// IR sensor
  // Read the analog value from the IR sensor
  int sensorValueR = analogRead(irSensorPinR);
  int sensorValueL = analogRead(irSensorPinL);


  // Convert the analog value to voltage
  float voltageR = sensorValueR * conversionFactor;
  float voltageL = sensorValueL * conversionFactor;


  // Convert voltage to distance (you may need to adjust these constants based on your sensor)
  float rightInfrared = 13.0 / (voltageR - 0.2);
  float leftInfrared = 13.0 / (voltageL - 0.2);

/////////////////////////////////////////////////////////////////// ir sensor looping information ]

///////////////////////////////////////////// ultrasonic sensor looping information
  // Forward-facing sensor
  digitalWrite(trigPinForward, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPinForward, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPinForward, LOW);

  durationForward = pulseIn(echoPinForward, HIGH);
  aheadUltra = (durationForward * 0.0343) / 2;
  Serial.print("Forward Distance: ");
  Serial.println(aheadUltra);

  // Left-facing sensor
  digitalWrite(trigPinLeft, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPinLeft, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPinLeft, LOW);

  durationLeft = pulseIn(echoPinLeft, HIGH);
  leftUltra = (durationLeft * 0.0343) / 2;
  Serial.print("Left Distance: ");
  Serial.println(leftUltra);
 /// delay(100); need to think about this delay
//////////////////////////////////////////////////////////

  
    defaultLineFollowing(rightInfrared, leftInfrared); //default line following if no object in front 10 centimeters 
  
/*  else if (aheadUltra < 10){ //else if object is less than 10 cm away or left ultra senses object less than 10 cm away
    turnRight(); //looking for a 90 degree turn
    forward();
    while (rightInfrared < 0 || leftInfrared < 0) //while there is only white sensed (and no black line)
     {

      if (leftUltra < 10){
      moveForward(50);
      }
      else if (leftUltra > 10){
      turnLeft(20,20);
      }
    }
  }*/

   /* if (rightInfrared > 0 || leftInfrared > 0){
      defaultLineFollowing(rightInfrared, leftInfrared);
    }
*/ //not sure if i need the above code



}




void forward(){
  leftMotor->setSpeed(50);  // Set speed for left motor
  leftMotor->run(FORWARD);     // Run left motor forward
  
  rightMotor->setSpeed(50); // Set speed for right motor
  rightMotor->run(FORWARD);    // Run right motor forward
  delay(100);
  leftMotor->run(RELEASE);
  rightMotor->run(RELEASE);
}

void stopMotion(){
  leftMotor->setSpeed(0);  // Set speed for left motor
  leftMotor->run(FORWARD);     // Run left motor BACKWARD
  
  rightMotor->setSpeed(0); // Set speed for right motor
  rightMotor->run(FORWARD);    // Run right motor FORWARD
}

void turnLeft(int leftM, int rightM) {
  leftMotor->setSpeed(leftM);  // Set speed for left motor
  leftMotor->run(FORWARD);     // Run left motor BACKWARD
  
  rightMotor->setSpeed(rightM); // Set speed for right motor
  rightMotor->run(BACKWARD);    // Run right motor FORWARD
}

void turnRight() { //the only time that you will turn right 
  leftMotor->setSpeed(40);  // Set speed for left motor
  leftMotor->run(FORWARD);     // Run left motor BACKWARD
  
  rightMotor->setSpeed(40); // Set speed for right motor
  rightMotor->run(BACKWARD);    // Run right motor FORWARD
  delay(100);
  leftMotor->run(RELEASE);
  rightMotor->run(RELEASE);

  
}

void moveForward(int speed) {
  leftMotor->setSpeed(speed);  // Set speed for left motor
  leftMotor->run(FORWARD);     // Run left motor forward
  
  rightMotor->setSpeed(speed); // Set speed for right motor
  rightMotor->run(FORWARD);    // Run right motor forward
}

void defaultLineFollowing(float rightInfrar, float leftInfrar) {


  //delay(500); // Adjust delay as needed

  if (rightInfrar < 0 && leftInfrar < 0) {
    rightMotor->setSpeed(10);
    rightMotor->run(FORWARD);
    leftMotor->setSpeed(10);
    leftMotor->run(FORWARD);

  } else if (rightInfrar > 0) {

    rightMotor->setSpeed(5);
    rightMotor->run(FORWARD);
    leftMotor->setSpeed(2);
    leftMotor->run(FORWARD);
    Serial.println("Right - Black");
  }


   else if (leftInfrar > 0) {
    rightMotor->setSpeed(2);
    rightMotor->run(FORWARD);
    leftMotor->setSpeed(5);
    leftMotor->run(FORWARD);
    Serial.println("Left - Black");
   
  }
}

