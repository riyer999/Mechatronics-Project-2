
#include <Wire.h>
#include <Adafruit_MotorShield.h>
#include "utility/Adafruit_MS_PWMServoDriver.h"


///////ultra sonic setup
// Pin configuration for first ultrasonic sensor
// Pin configuration for the forward-facing ultrasonic sensor
const int trigPinForward = 9;
const int echoPinForward = 10;


// Pin configuration for the left-facing ultrasonic sensor
const int trigPinLeft = 11;
const int echoPinLeft = 12;


float durationForward, aheadUltra;
float durationLeft, leftUltra;
/////////////// ultra sonic setup complete


const int irSensorPinR = A8; // Analog pin for IR sensor
const int irSensorPinL = A9; // Analog pin for IR sensor
const float conversionFactor = 5.0 / 1023.0; // Conversion factor for analog readings to voltage
  
Adafruit_MotorShield AFMS = Adafruit_MotorShield();
Adafruit_DCMotor *motor1 = AFMS.getMotor(1);
Adafruit_DCMotor *motor2 = AFMS.getMotor(2);

void moveForward(int speed) {
  motor1->setSpeed(speed);  // Set speed for left motor
  motor1->run(FORWARD);     // Run left motor forward
  
  motor2->setSpeed(speed); // Set speed for right motor
  motor2->run(FORWARD);    // Run right motor forward
}

void forward(){
  motor2->setSpeed(50);  // Set speed for left motor
  motor2->run(FORWARD);     // Run left motor forward
  
  motor1->setSpeed(50); // Set speed for right motor
  motor1->run(FORWARD);    // Run right motor forward
  delay(100);
  motor2->run(RELEASE);
  motor1->run(RELEASE);
}

void turnRight() { //the only time that you will turn right 
  motor2->setSpeed(40);  // Set speed for left motor
  motor2->run(FORWARD);     // Run left motor BACKWARD
  
  motor1->setSpeed(40); // Set speed for right motor
  motor1->run(BACKWARD);    // Run right motor FORWARD
  delay(100);
  motor2->run(RELEASE);
  motor1->run(RELEASE);

  
}

void setup() {
  Serial.begin(9600);
  AFMS.begin();
  /// initializing pins for the ultrasonic sensors ////
  pinMode(trigPinForward, OUTPUT);
  pinMode(echoPinForward, INPUT);
  pinMode(trigPinLeft, OUTPUT);
  pinMode(echoPinLeft, INPUT);
  /// initializing pins for the ultrasonic sensors ////

  



}

void loop() {
  int sensorValueR = analogRead(irSensorPinR);
  int sensorValueL = analogRead(irSensorPinL);

  // Convert the analog value to voltage
  float voltageR = sensorValueR * conversionFactor;
  float voltageL = sensorValueL * conversionFactor;

  // Convert voltage to distance
  float distanceR1 = 13.0 / (voltageR - 0.2);
  float distanceL1 = 13.0 / (voltageL - 0.2);
///////////////////////////////////////////// ultrasonic sensor looping information
  // Forward-facing sensor
  digitalWrite(trigPinForward, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPinForward, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPinForward, LOW);

  durationForward = pulseIn(echoPinForward, HIGH);
  aheadUltra = (durationForward * 0.0343) / 2;
  Serial.print("Forward Distance: ");
  Serial.println(aheadUltra);

  // Left-facing sensor
  digitalWrite(trigPinLeft, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPinLeft, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPinLeft, LOW);

  durationLeft = pulseIn(echoPinLeft, HIGH);
  leftUltra = (durationLeft * 0.0343) / 2;
  Serial.print("Left Distance: ");
  Serial.println(leftUltra);
 /// delay(100); need to think about this delay
//////////////////////////////////////////////////////////


  defaultLineFollowing(distanceR1, distanceL1);

  delay(300);
}

void defaultLineFollowing(float distanceR, float distanceL)
{
  if (distanceR < 0 && distanceL < 0) {
   // Serial.println("Both sensors see white.");
    motor1->setSpeed(30);  // set the speed to maximum
    motor1->run(FORWARD);
    motor2->setSpeed(30);  // set the speed to maximum
    motor2->run(FORWARD);
  } else if (distanceR > 0) {
   // Serial.println("Right sensor sees black.");
    motor1->setSpeed(50);  // set the speed to maximum
    motor1->run(FORWARD);
    motor2->setSpeed(42);  // stop left motor
    motor2->run(BACKWARD);
  } else if (distanceL > 0) {
  //  Serial.println("Left sensor sees black.");
    motor1->setSpeed(42);  // stop right motor
    motor1->run(BACKWARD);
    motor2->setSpeed(50);  // set the speed to maximum
    motor2->run(FORWARD);
  } else {
   // Serial.println("Both sensors see black.");
    motor1->setSpeed(0);  // stop both motors
    motor1->run(RELEASE);
    motor2->setSpeed(0);
    motor2->run(RELEASE);
  }
}



